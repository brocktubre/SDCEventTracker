@model SDCEventTracker.Models.Event

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.EventName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.EventName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EventName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Date,  new { @class = "form-control datepicker" })
                @Html.ValidationMessageFor(model => model.Date)
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Location, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Location, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Location)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.City, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.City)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.State, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.State, new SelectList( new List<Object>{  new {value=0, text=""}, new { value = "LA" , text = "Louisiana"  }, new { value = "TX" , text = "Texas" }, new { value = "CA" , text = "California"}}, "value", "text", 1), new {@class = "form-control" })
                @*Html.TextBoxFor(model => model.State, new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.State)
                
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Zip, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Zip, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Zip)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MorningHunt, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MorningHunt, new { @class = "input" })
                @Html.ValidationMessageFor(model => model.MorningHunt)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EveningHunt, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EveningHunt, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EveningHunt)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BenchShow, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BenchShow, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BenchShow)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BarkingContest, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BarkingContest, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BarkingContest)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div class="col-md-2 pull-right">
    <button type="button" class="btn btn-default">@Html.ActionLink("Back to Competitions", "Competitions")<i class="fa fa-home"></i></button>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
